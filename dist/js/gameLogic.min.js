"use strict";var allSpans,gameMode,startSite=document.querySelector(".starter-site"),testSite=document.querySelector(".test-site"),summarySite=document.querySelector(".summary-site"),testText=document.querySelector(".test-site__text p"),inputField=document.querySelector(".test-site__input"),statsHeader=document.querySelector(".test-site__header"),statsContainer=document.querySelector(".test-site__actual-stats"),statsRemainingTime=document.querySelector("#remaining-time"),statsWPM=document.querySelector("#wpm"),statsCPM=document.querySelector("#cpm"),statsAccuracy=document.querySelector("#accuracy"),summarySiteWPM=document.querySelector("#summary-site-wpm"),summarySiteAccuracy=document.querySelector("#summary-site-accuracy"),btn1minute=document.querySelector("#btn-1"),btnFullText=document.querySelector("#btn-full"),charactersPerMinute=0,wordsPerMinute=0,accuracy=0,goodLetter=0,wrongLetter=0,actualLetter=0,letterToType=actualLetter+1,gameTimeRemaining=60,doNotRepeatTimer=0,generateText=function(){var e=Math.floor(15*Math.random()),t=Math.floor(15*Math.random()+15),a=Math.floor((randomSentences.length-30)*Math.random()+30);"".concat(randomSentences[e]," ").concat(randomSentences[t]," ").concat(randomSentences[a]).split("").forEach(function(e){e='<span style="padding: .6px;margin: .4px;">'.concat(e,"</span>");testText.innerHTML+=e}),(allSpans=document.querySelectorAll(".test-site__text p > span"))[0].classList.add("letter-to-type")},startTimer=function(){window.setInterval(function(){0<gameTimeRemaining?gameTimeRemaining--:endGame(),statsRemainingTime.innerHTML=gameTimeRemaining+"s",updateStats()},1e3)},showStats=function(){statsHeader.style.display="none",statsContainer.style.display="flex"},updateStats=function(){wordsPerMinute=Math.round(goodLetter/5/(61-gameTimeRemaining)*60),charactersPerMinute=Math.round(goodLetter/(61-gameTimeRemaining)*60),accuracy=0==actualLetter?0:Math.round(goodLetter/(goodLetter+wrongLetter)*100),statsWPM.innerText="".concat(wordsPerMinute),statsCPM.innerText="".concat(charactersPerMinute),statsAccuracy.innerText="".concat(accuracy,"%")},startGame=function(){startSite.style.display="none",testSite.style.display="flex",generateText(),document.addEventListener("keydown",function(){return inputField.focus()}),testText.addEventListener("click",function(){return inputField.focus()})},gameLogic=function(e){var t=testText.innerText.split("");if(inputField.value.split("")[actualLetter]===t[actualLetter]?(allSpans[actualLetter].className="",allSpans[actualLetter].classList.add("correct-letter"),allSpans[letterToType].classList.add("letter-to-type"),actualLetter++,letterToType++,goodLetter++):inputField.value.split("")[actualLetter]?(allSpans[actualLetter].className="",allSpans[actualLetter].classList.add("incorrect-letter"),allSpans[letterToType].classList.add("letter-to-type"),actualLetter++,letterToType++,wrongLetter++):(e.key="backspace",allSpans[actualLetter].className="",letterToType--,allSpans[--actualLetter].classList.contains("correct-letter")?goodLetter--:wrongLetter--,allSpans[letterToType-1].classList.add("letter-to-type")),1==gameMode&&1==inputField.value.split("").length){if(0!=doNotRepeatTimer)return;doNotRepeatTimer=1,startTimer(),showStats()}updateStats()},fullTimeGameMode=function(){startGame(),gameMode=0},remainingTimeGameMode=function(){startGame(),gameMode=1},endGame=function(){testSite.style.display="none",summarySite.style.display="flex",summarySiteWPM.innerText=Math.round(goodLetter/5),summarySiteAccuracy.innerText=Math.round(goodLetter/(goodLetter+wrongLetter)*100)};btn1minute.addEventListener("click",remainingTimeGameMode()),btnFullText.addEventListener("click",fullTimeGameMode),inputField.addEventListener("input",gameLogic);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
